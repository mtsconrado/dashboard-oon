{"version":3,"sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","views/components/Pagination.jsx","views/finance/components/MonthAndYear.jsx","views/finance/modais/Filter.jsx","views/finance/modais/Reports.jsx","views/finance/buttons/ButtonGraph.jsx","views/finance/charts/ChartPlans.jsx","views/finance/charts/ChartUsers.jsx","views/finance/charts/Calendar.jsx","views/finance/users/Users.jsx","views/finance/charts/ToppingsAndDevices.jsx","views/finance/Finance.jsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","createContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","createElement","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","Pagination","numberOfPages","page","previousPage","setPreviousPage","currentPage","setCurrentPage","nextPage","setNextPage","qtdElements","capturePreviousPage","nPage","captureNextPage","onClick","variant","defaultChecked","active","MonthAndYear","date","Date","month","getMonth","year","getFullYear","UsersFilter","filter","setFilter","name","saveFilter","useState","valueFilterCity","setValueFilterCity","valueFilterType","setValueFilterType","valueFilterStartDate","setValueFilterStartDate","valueFilterFinalDate","setValueFilterFinalDate","useEffect","visible","onClose","alignment","xs","onChange","target","value","options","label","type","Reports","report","setReport","valueReportCity","setValueReportCity","valueReportType","setValueReportType","valueReportStartDate","setValueReportStartDate","valueReportFinalDate","setValueReportFinalDate","ButtonChart","direction","caret","icon","cilOptions","Filter","ChartPlan","ButtonGraph","usersCity","usersType","initialDate","finalDate","plugins","legend","display","datasets","backgroundColor","barPercentage","labels","ChartUsers","bodyWeek","newUsers","recurringUsers","sm","position","padding","boxWidth","Calendar2","pessoas","Users","op1","setOp1","setNumberOfPages","defaulters","setDefaulters","nonDefaulters","setNonDefaulters","adimplÃªncia","nContrato","funcionario","valor","pagamento","placaVeiculo","dados","choiceNonDefaulters","totalPages","adiplentes","dado","placeholder","inadiplentes","striped","hover","scope","index","toFixed","replace","toString","ToppingsAndDevices","layout","Finance"],"mappings":"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","file":"static/js/22.6e5395f8.chunk.js","sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  }\n]","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from 'react'\nimport { CButton, CPagination } from '@coreui/react';\nimport { TiChevronLeftOutline, TiChevronRightOutline } from 'react-icons/ti';\n\nfunction Pagination({ numberOfPages, page, previousPage, setPreviousPage, currentPage, setCurrentPage, nextPage, setNextPage, qtdElements }) {\n\n    function capturePreviousPage(e, nPage) {\n        if (currentPage == 1) {\n            setPreviousPage(\"\");\n            setNextPage(2);\n        } else if (e == nPage) {\n            setNextPage(2);\n            setCurrentPage(1);\n            setPreviousPage(\"\");\n        } else {\n            setNextPage(currentPage);\n            setCurrentPage(currentPage - 1);\n            setPreviousPage(currentPage - 2);\n        }\n        const aux = e - 1;\n        page(aux);\n    }\n\n    // Proxima pagina\n    function captureNextPage(e, nPage) {\n\n        if (currentPage == 1 && nPage == 2) {\n            setNextPage(\"\");\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(1);\n        } else if (e == nPage) {\n            setNextPage(\"\");\n            setCurrentPage(e);\n            setPreviousPage(numberOfPages - 1);\n        } else if (currentPage == 1 && nPage != 2) {\n            setNextPage(3);\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(1);\n        } else if (currentPage < nPage - 1) {\n            setNextPage(currentPage + 2);\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(currentPage);\n        }\n        const aux = e - 1;\n        page(aux);\n    }\n\n    return (\n        <CPagination\n            className=\"container-devices-pagination\"\n            color=\"dark\"\n            aria-label=\"Page navigation example\"\n        >\n           { qtdElements ? \n            <label className=\"container-qtd-employeer\">\n                HÃ¡ {qtdElements} dispositivos\n            </label>: null}\n            <div className=\"container-pagination-align justify-content-end\">\n                {previousPage != \"\" ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() => {\n                                capturePreviousPage(\n                                    previousPage,\n                                    numberOfPages\n                                );\n                            }}\n                            variant=\"outline\"\n                        >\n                            <TiChevronLeftOutline />\n                        </CButton>\n                        {currentPage > 2 ? (\n                            <>\n                                <CButton\n                                    className=\"btn-user-pagination\"\n                                    color=\"dark\"\n                                    onClick={() =>\n                                        capturePreviousPage(\n                                            1,\n                                            1\n                                        )\n                                    }\n                                    variant=\"outline\"\n                                >\n                                    1\n                                </CButton>\n                                <span>...</span>\n                            </>\n                        ) : null}\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() => {\n                                capturePreviousPage(\n                                    previousPage,\n                                    numberOfPages\n                                );\n                            }}\n                            variant=\"outline\"\n                        >\n                            {previousPage}\n                        </CButton>\n                    </>\n                ) : null}\n                {currentPage == 0 ? (\n                    <CButton\n                        className=\"btn-user-pagination\"\n                        defaultChecked\n                        color=\"dark\"\n                        active={true}\n                    >\n                        {currentPage + 1}\n                    </CButton>\n                ) : (\n                    <CButton\n                        className=\"btn-user-pagination\"\n                        defaultChecked\n                        color=\"dark\"\n                        active={true}\n                    >\n                        {currentPage}\n                    </CButton>\n                )}\n                {currentPage === numberOfPages - 1 ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() =>\n                                captureNextPage(\n                                    nextPage,\n                                    numberOfPages\n                                )\n                            }\n                            variant=\"outline\"\n                        >\n                            {nextPage}\n                        </CButton>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() =>\n                                captureNextPage(\n                                    nextPage,\n                                    numberOfPages\n                                )\n                            }\n                            variant=\"outline\"\n                        >\n                            <TiChevronRightOutline />\n                        </CButton>\n                    </>\n                ) : null}\n                {nextPage < numberOfPages &&\n                    nextPage !== \"\" ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() =>\n                                captureNextPage(\n                                    nextPage,\n                                    numberOfPages\n                                )\n                            }\n                            variant=\"outline\"\n                        >\n                            {nextPage}\n                        </CButton>\n                        <span>...</span>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() =>\n                                captureNextPage(\n                                    numberOfPages,\n                                    numberOfPages\n                                )\n                            }\n                            variant=\"outline\"\n                        >\n                            {numberOfPages}\n                        </CButton>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            color=\"dark\"\n                            onClick={() =>\n                                captureNextPage(\n                                    nextPage,\n                                    numberOfPages\n                                )\n                            }\n                            variant=\"outline\"\n                        >\n                            <TiChevronRightOutline />\n                        </CButton>\n                    </>\n                ) : null}\n            </div>\n        </CPagination>\n    )\n}\n\nexport default  Pagination;\n","function MonthAndYear() {\n    const date = new Date();\n    const month = date.getMonth()\n    const year = date.getFullYear();\n\n    const nameMonth = {\n        0: 'Janeiro',\n        1: 'Fevereiro',\n        2: 'MarÃ§o',\n        3: 'Abril',\n        4: 'Maio',\n        5: 'Junho',\n        6: 'Julho',\n        7: 'Agosto',\n        8: 'Setembro',\n        9: 'Outubro',\n        10: 'Novembro',\n        11: 'Dezembro',\n    }\n\n  return (\n    `${nameMonth[month]} de ${year}`\n  )\n}\n\nexport default  MonthAndYear","import React, { useEffect, useState } from 'react';\nimport { CButton, CCol, CFormInput, CFormSelect, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from '@coreui/react';\n\nfunction UsersFilter({ filter, setFilter, name, saveFilter }) {\n    const [valueFilterCity, setValueFilterCity] = useState('');\n    const [valueFilterType, setValueFilterType] = useState('');\n    const [valueFilterStartDate, setValueFilterStartDate] = useState('');\n    const [valueFilterFinalDate, setValueFilterFinalDate] = useState('');\n\n    useEffect(() => {\n        return () => {\n            setValueFilterCity('')\n            setValueFilterType('')\n            setValueFilterStartDate('')\n            setValueFilterFinalDate('')\n        }\n    }, [])\n\n    return (\n        <CModal\n            visible={filter}\n            onClose={() => setFilter(false)}\n            size=\"lg\"\n            alignment=\"center\"\n        >\n            <CModalHeader>\n                <CModalTitle>{`Filtrar - GrÃ¡fico ${name}`}</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n                <CRow className=\"mb-4\">\n                    <div className=\"title-filter\">\n                        Escolha os filtros\n                    </div>\n                    <CCol xs={4}>\n                        <h6>Cidade dos usuÃ¡rios</h6>\n                        <CFormSelect\n                            onChange={({ target }) => setValueFilterCity(target.value)}\n                            options={[\n                                'Cidade',\n                                { label: 'Belo Horizonte', value: '1' },\n                                { label: 'SÃ£o Paulo', value: '2' },\n                                { label: 'Rio de Janeior', value: '3' }\n                            ]}\n                        />\n                    </CCol>\n                    <CCol xs={4}>\n                        <h6>Tipo de usuÃ¡rios</h6>\n                        <CFormSelect\n                            onChange={({ target }) => setValueFilterStartDate(target.value)}\n                            options={[\n                                'Tipos',\n                                { label: 'Todos usuÃ¡rios', value: '1' },\n                                { label: 'UsuÃ¡rios novos', value: '2' },\n                                { label: 'UsuÃ¡rios recorrentes', value: '3' }\n                            ]}\n                        />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <div className=\"title-filter\">\n                        Escolha o intervalo de tempo\n                    </div>\n                    <CCol xs={3}>\n                        <h6>Data de inÃ­cio</h6>\n                        <div className=\"d-flex\">\n                            <CFormInput\n                                onChange={({ target }) => setValueFilterStartDate(target.value)}\n                                className=\"me-2\"\n                                type=\"date\"\n                            />\n                        </div>\n                    </CCol>\n                    <CCol xs={3}>\n                        <h6>Data de fim</h6>\n                        <div className=\"d-flex\">\n                            <CFormInput\n                                onChange={({ target }) => setValueFilterFinalDate(target.value)}\n                                className=\"me-2\"\n                                type=\"date\"\n                            />\n                        </div>\n                    </CCol>\n                </CRow>\n            </CModalBody>\n            <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => setFilter(false)}>\n                    Cancelar\n                </CButton>\n                <CButton\n                    onClick={() => saveFilter(valueFilterCity, valueFilterType, valueFilterStartDate, valueFilterFinalDate)}\n                    color=\"primary\" >\n                    Salvar\n                </CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default  UsersFilter","import React, { useEffect, useState } from 'react';\nimport { CButton, CCol, CFormInput, CFormSelect, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from '@coreui/react';\n\nfunction Reports({ report, setReport, name, saveFilter }) {\n    const [valueReportCity, setValueReportCity] = useState('');\n    const [valueReportType, setValueReportType] = useState('');\n    const [valueReportStartDate, setValueReportStartDate] = useState('');\n    const [valueReportFinalDate, setValueReportFinalDate] = useState('');\n\n    useEffect(() => {\n        return () => {\n            setValueReportCity('')\n            setValueReportType('')\n            setValueReportStartDate('')\n            setValueReportFinalDate('')\n        }\n    }, [])\n\n    return (\n        <CModal\n            visible={report}\n            onClose={() => setReport(false)}\n            size=\"lg\"\n            alignment=\"center\"\n        >\n            <CModalHeader>\n                <CModalTitle>{`RelatÃ³rio - GrÃ¡fico ${name}`}</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n                <CRow className=\"mb-4\">\n                    <div className=\"title-filter\">\n                        Escolha os filtros\n                    </div>\n                    <CCol xs={4}>\n                        <h6>Cidade dos usuÃ¡rios</h6>\n                        <CFormSelect\n                            onChange={({ target }) => setValueReportCity(target.value)}\n                            options={[\n                                'Cidade',\n                                { label: 'Belo Horizonte', value: '1' },\n                                { label: 'SÃ£o Paulo', value: '2' },\n                                { label: 'Rio de Janeior', value: '3' }\n                            ]}\n                        />\n                    </CCol>\n                    <CCol xs={4}>\n                        <h6>Tipo dos usuÃ¡rios</h6>\n                        <CFormSelect\n                            onChange={({ target }) => setValueReportType(target.value)}\n                            options={[\n                                'Tipos',\n                                { label: 'Todos usuÃ¡rios', value: '1' },\n                                { label: 'UsuÃ¡rios novos', value: '2' },\n                                { label: 'UsuÃ¡rios recorrentes', value: '3' }\n                            ]}\n                        />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <div className=\"title-filter\">\n                        Escolha o intervalo de tempo\n                    </div>\n                    <CCol xs={3}>\n                        <h6>Data de inÃ­cio</h6>\n                        <div className=\"d-flex\">\n                            <CFormInput\n                                onChange={({ target }) => setValueReportStartDate(target.value)}\n                                className=\"me-2\"\n                                type=\"date\"\n                            />\n                        </div>\n                    </CCol>\n                    <CCol xs={3}>\n                        <h6>Data de fim</h6>\n                        <div className=\"d-flex\">\n                            <CFormInput\n                                onChange={({ target }) => setValueReportFinalDate(target.value)}\n                                className=\"me-2\"\n                                type=\"date\"\n                            />\n                        </div>\n                    </CCol>\n                </CRow>\n            </CModalBody>\n            <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => setReport(false)}>\n                    Cancelar\n                </CButton>\n                <CButton\n                    onClick={() => saveFilter(valueReportCity, valueReportType, valueReportStartDate, valueReportFinalDate)}\n                    color=\"primary\"\n                >\n                    Salvar\n                </CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default  Reports","import React, { useState } from 'react'\nimport { CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\n\nimport Filter from '../modais/Filter';\nimport Reports from '../modais/Reports';\n\nimport '../css/modaisFilterReports.css';\n\nconst ButtonChart = ({ name, saveFilter }) => {\n    const [filter, setFilter] = useState(false);\n    const [report, setReport] = useState(false);\n    \n    return (\n        <>\n            <CDropdown direction=\"dropstart\">\n                <CDropdownToggle caret={false} variant='ghost' color=\"link\" className=\"p-0\">\n                    <CIcon icon={cilOptions} size=\"lg\" />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                    <CDropdownItem onClick={() => setFilter(true)}>Filtrar...</CDropdownItem>\n                    <CDropdownItem onClick={() => setReport(true)}>Gerar relatÃ³rio...</CDropdownItem>\n                    <CDropdownItem>Fazer download...</CDropdownItem>\n                </CDropdownMenu>\n            </CDropdown>\n            <Filter name={name} filter={filter} setFilter={setFilter} saveFilter={saveFilter}/>\n            <Reports name={name} report={report} setReport={setReport} saveFilter={saveFilter} />\n        </>\n    )\n}\n\nexport default  ButtonChart;\n","import React from 'react'\nimport { CCard, CCardBody, CCol, CRow } from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\n\nimport MonthAndYear from '../components/MonthAndYear'\nimport ButtonGraph from '../buttons/ButtonGraph'\n\nconst ChartPlan = () => {\n    const saveFilter = (usersCity, usersType, initialDate, finalDate) => {\n        // endpoint para fazer o filtro\n    }\n\n    return (\n        <>\n            <CCard className=\"cards\">\n                <CCardBody>\n                    <CRow>\n                        <CCol>\n                            <label className=\"finc-title\">Planos</label>\n                            <br />\n                            <label className=\"finc-sub\"> <MonthAndYear /></label>\n                        </CCol>\n                        <CCol className='btn-filter'>\n                            <ButtonGraph name={'dos planos'} saveFilter={saveFilter} />\n                        </CCol>\n                    </CRow>\n\n                    <CChart\n                        type=\"bar\"\n                        options={{\n                            plugins: {\n                                legend: {\n                                    display: false,\n                                }\n                            }\n                        }}\n                        data={{\n                            datasets: [\n                                {\n                                    backgroundColor: ['#00F781', '#FF6711', '#FF2828'],\n                                    barPercentage: 0.7,\n                                    data: [40, 20, 10],\n                                }\n                            ],\n                            labels: ['Ativos', 'Em anÃ¡lise', 'Cancelado',],\n                        }}\n                        width={5}\n                        height={5}\n                    />\n                </CCardBody>\n            </CCard>\n        </>\n    )\n}\n\nexport default  ChartPlan","import React from 'react'\nimport { CCard, CCardBody, CCol, CRow } from '@coreui/react'\nimport { CChart } from '@coreui/react-chartjs'\n\nimport ButtonGraph from '../buttons/ButtonGraph'\nimport MonthAndYear from '../components/MonthAndYear'\n\nconst ChartUsers = () => {\n    const bodyWeek = {\n        labels: ['Sem 1', 'Sem 2', 'Sem 3', 'Sem 4', 'Sem 5'],\n        newUsers: [40, 10, 20, 60, 20],\n        recurringUsers: [30, 30, 10, 10, 63],\n    }\n\n    const saveFilter = (usersCity, usersType, initialDate, finalDate) => {\n        // endpoint para fazer o filtro\n    }\n\n    return (\n        <CCard className=\"cards\">\n            <CCardBody>\n                <CRow>\n                    <CCol sm=\"auto\">\n                        <label className=\"finc-title\">Total de usuÃ¡rios</label>\n                        <br />\n                        <label className=\"finc-sub\"><MonthAndYear /></label>\n                    </CCol>\n                    <CCol className='btn-filter'>\n                        <ButtonGraph name={'dos usuÃ¡rios'} saveFilter={saveFilter} />\n                    </CCol>\n                </CRow>\n\n                <CChart\n                    labels=\"week\"\n                    type=\"bar\"\n                    options={{\n                        plugins: {\n                            legend: {\n                                position: 'bottom',\n                                labels: {\n                                    padding: 8,\n                                    boxWidth: 30\n                                }\n                            },\n                        }\n                    }}\n                    data={{\n                        labels: bodyWeek.labels,\n                        datasets: [\n                            {\n                                label: 'UsuÃ¡rios novos',\n                                barPercentage: 0.6,\n                                backgroundColor: '#00F781',\n                                data: bodyWeek.newUsers,\n                            },\n                            {\n                                label: 'UsuÃ¡rios recorrentes',\n                                barPercentage: 0.6,\n                                backgroundColor: '#216CFF',\n                                data: bodyWeek.recurringUsers,\n                            },\n                        ],\n                    }}\n                    width={100}\n                    height={100}\n                />\n            </CCardBody>\n        </CCard>\n    )\n}\n\nexport default  ChartUsers;\n","import React, { useState } from \"react\"\nimport Calendar from \"react-calendar\"\nimport { CCard, CCardBody } from '@coreui/react'\n\nimport 'react-calendar/dist/Calendar.css';\n\nconst Calendar2 = () => {\n\n    const [value, onChange] = useState(new Date())\n\n    const [pessoas, setPessoas] = useState(22) // caso fizer alguma requisicao, utilizar aqui atÃ© carregar\n\n    if (pessoas == '') {\n        return (\n            <>\n                <h5>Loading ... </h5>\n            </>\n        )\n    } else {\n        return (\n            <Calendar\n                onChange={onChange}\n                value={value}\n                className='calendario'\n            />\n        )\n    }\n}\n\nexport default  Calendar2","import React, { useEffect, useState } from 'react'\nimport {\n    CTable,\n    CTableBody,\n    CTableDataCell,\n    CTableRow,\n    CCard,\n    CCardBody,\n    CTableHead,\n    CTableHeaderCell,\n    CForm,\n    CFormInput,\n    CButton,\n    CRow,\n    CCol,\n} from '@coreui/react'\nimport MonthAndYear from '../components/MonthAndYear';\nimport Pagination from '../../components/Pagination';\n\nimport '../css/users.css';\n\nconst Users = () => {\n    const [op1, setOp1] = useState(true);\n    const [previousPage, setPreviousPage] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [nextPage, setNextPage] = useState(\"\");\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    const [defaulters, setDefaulters] = useState([])\n    const [nonDefaulters, setNonDefaulters] = useState([])\n\n    function initPages(e) {\n        if (e.data.totalPages > 1) {\n            setCurrentPage(1);\n            setNextPage(2);\n            setPreviousPage(\"\");\n        }\n    }\n\n    const [dados, setDados] = useState([\n        { adimplÃªncia: 'adimplentes', nContrato: 1, funcionario: 'GUstavo Alcantara', valor: 22.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-345' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 2, funcionario: 'Pedro da', valor: 12.20, pagamento: '10/02/2022', placaVeiculo: 'HHH-111' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 3, funcionario: 'Gislene a', valor: 122.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-345' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 4, funcionario: 'Yuri Almeida', valor: 20.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-123' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 5, funcionario: 'GUstavo Alcantara', valor: 22.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-345' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 6, funcionario: 'Pedro d', valor: 12.20, pagamento: '10/02/2022', placaVeiculo: 'HHH-111' },\n        { adimplÃªncia: 'inadimplentes', nContrato: 7, funcionario: 'Gislene w', valor: 122.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-345' },\n        { adimplÃªncia: 'adimplentes', nContrato: 8, funcionario: 'Yuri Almeida', valor: 20.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-123' },\n        { adimplÃªncia: 'adimplentes', nContrato: 9, funcionario: 'GUstavo a', valor: 22.20, pagamento: '10/02/2022', placaVeiculo: 'KKK-345' },\n        { adimplÃªncia: 'adimplentes', nContrato: 10, funcionario: 'Pedro a', valor: 12.20, pagamento: '10/02/2022', placaVeiculo: 'HHH-111' },\n\n    ])\n\n\n    useEffect(() => {\n        choiceNonDefaulters();\n        initPages({ data: { totalPages: 10 } })\n        setNumberOfPages(4)\n    }, [])\n\n    function page(e) {\n        //     setDados([]);\n        //     axios\n        //         .get(\n        //             `${UrlDomain}/signatures?pageSize=${qtdPgns}&pageNumber=${e}`,\n        //             configCookies\n        //         )\n        //         .then((response) => {\n        //             setDados(response.data.content);\n        //             setNumberOfPages(response.data.totalPages);\n        //         })\n        //         .catch((r) => {\n        //             console.log(\"error\", r),\n        //                 alert(\"Login expirado\"),\n        //                 window.location.reload();\n        //         });\n    }\n\n    const choiceDefaulters = () => {\n        setOp1(false)\n        const inadiplentes = dados.filter((dado) => dado.adimplÃªncia == 'inadimplentes');\n        setDefaulters(inadiplentes)\n    };\n\n    const choiceNonDefaulters = () => {\n        setOp1(true)\n        const adiplentes = dados.filter((dado) => dado.adimplÃªncia == 'adimplentes');\n        setNonDefaulters(adiplentes)\n    };\n\n    return (\n        <CCard className=\"cards-customers\">\n            <CCardBody>\n                <CRow>\n                    <CCol>\n                        <label className=\"finc-title\">Clientes inadimplentes e adimplentes</label>\n                        <br />\n                        <label className=\"finc-sub\"> <MonthAndYear /></label>\n                    </CCol>\n\n                    <CCol className=\"d-md-flex justify-content-md-end\">\n                        <CForm className=\"row g-3\">\n                            <CCol xs=\"auto\">\n                                <CFormInput size=\"sm\" type=\"search\" placeholder=\"Pesquisar\" />\n                            </CCol>\n                            <CCol xs=\"auto\">\n                                <CButton color='secondary' className='button-css' >\n                                    Buscar\n                                </CButton>\n                            </CCol>\n                            <CCol xs=\"auto\">\n                                <CButton className='button-css' >\n                                    Baixar planilha\n                                </CButton>\n                            </CCol>\n                        </CForm>\n                    </CCol>\n                </CRow>\n                <CRow className=\"pt-3\">\n                    <CCol\n                        className={\n                            op1 === true\n                                ? \"nav-non-defaulters-active\" : \"nav-non-defaulters\"\n\n                        }\n                        onClick={choiceNonDefaulters}\n                    >\n                        <label>Adimplentes</label>\n                    </CCol>\n                    <CCol\n                        className={\n                            op1 === false\n                                ?\n                                \"nav-defaulters-active\"\n                                : \"nav-defaulters\"\n                        }\n                        onClick={choiceDefaulters}\n                    >\n                        <label>Inadimplentes</label>\n                    </CCol>\n                    <CCol></CCol>\n                    <CCol></CCol>\n                    <hr />\n                </CRow>\n\n                <CTable striped hover>\n                    <CTableHead>\n                        <CTableRow>\n                            <CTableHeaderCell scope=\"col\">Nome do usuÃ¡rio</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Placa do veÃ­culo</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">NÂº do contrato</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Ãltimo pagamento</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Valor</CTableHeaderCell>\n                        </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                        {\n                            op1 === true ?\n                                nonDefaulters.map((i, index) => (\n                                    <CTableRow key={index.toString()}>\n                                        <CTableDataCell>\n                                            {i.funcionario}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {i.placaVeiculo}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {i.nContrato}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {i.pagamento}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {` R$ ${i.valor.toFixed(2).replace('.', ',')}`}\n                                        </CTableDataCell>\n                                    </CTableRow>\n                                )) : defaulters.map((i, index) => (\n                                    <CTableRow key={index.toString()}>\n                                        <CTableDataCell>\n                                            {i.funcionario}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {i.nContrato}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {i.pagamento}\n                                        </CTableDataCell>\n                                        <CTableDataCell>\n                                            {` R$ ${i.valor.toFixed(2).replace('.', ',')}`}\n                                        </CTableDataCell>\n                                    </CTableRow>\n                                ))}\n                    </CTableBody>\n                </CTable>\n            </CCardBody>\n            <Pagination page={page} numberOfPages={numberOfPages} previousPage={previousPage} setPreviousPage={setPreviousPage} currentPage={currentPage} setCurrentPage={setCurrentPage} nextPage={nextPage} setNextPage={setNextPage} />\n        </CCard>\n    )\n}\n\nexport default  Users;\n","import React from 'react'\nimport { CCard, CCardBody, CCol, CRow } from '@coreui/react';\nimport { CChart } from '@coreui/react-chartjs';\n\nimport MonthAndYear from '../components/MonthAndYear';\nimport ButtonGraph from '../buttons/ButtonGraph';\n\nfunction ToppingsAndDevices() {\n    const saveFilterToppings = (usersCity, usersType, initialDate, finalDate) => {\n        // endpoint para fazer o filtro\n    }\n\n    const saveFilterDevices = (usersCity, usersType, initialDate, finalDate) => {\n        // endpoint para fazer o filtro\n    }\n\n    return (\n        <>\n            <CCard className=\"cards-toppings-and-devices mb-2\">\n                <CCardBody>\n                    <CRow>\n                        <CCol>\n                            <label className=\"finc-title\">Coberturas</label>\n                            <br />\n                            <label className=\" finc-sub\"> <MonthAndYear /></label>\n                        </CCol>\n                        <CCol className='btn-filter'>\n                            <ButtonGraph name={'das coberturas'} saveFilter={saveFilterToppings} />\n                        </CCol>\n                    </CRow>\n                    <CChart\n                        type=\"doughnut\"\n                        options={{\n                            plugins: {\n                                legend: {\n                                    position: 'bottom',\n                                },\n                            }\n                        }}\n                        data={{\n                            labels: ['ProteÃ§Ã£o de danos materiais', 'Chaveiro', 'ColisÃ£o de Perda Total', 'ColisÃ£o de Danos Parciais', 'Cobertura de vidros'],\n                            datasets: [\n                                {\n                                    backgroundColor: ['#216CFF', '#FF6711', '#00F781', '#FE3F61', '#14142B'],\n                                    data: [40, 20, 80, 10, 30],\n                                },\n                            ],\n                        }}\n                    />\n                </CCardBody>\n            </CCard>\n            <CCard className=\"cards-toppings-and-devices\">\n                <CCardBody>\n                    <CRow>\n                        <CCol>\n                            <label className=\"finc-title\">Dispositivos</label>\n                            <br />\n                            <label className=\" finc-sub\"> <MonthAndYear /></label>\n                        </CCol>\n                        <CCol className='btn-filter'>\n                            <ButtonGraph name={'dos dispositivos'} saveFilter={saveFilterDevices} />\n                        </CCol>\n                    </CRow>\n                    <CChart\n                        className=\"devices-width\"\n                        type=\"doughnut\"\n                        options={{\n                            layout: {\n                                padding: 40\n                            },\n                            plugins: {\n                                legend: {\n                                    position: 'bottom',\n                                },\n                            },\n                        }}\n                        data={{\n                            labels: ['Sincronizados', 'Inativos'],\n                            datasets: [\n                                {\n                                    backgroundColor: ['#00F781', '#1B54BD'],\n                                    data: [40, 20],\n                                },\n                            ],\n                        }}\n                    />\n                </CCardBody>\n            </CCard>\n        </>\n    )\n}\n\nexport default  ToppingsAndDevices;\n","import React from \"react\";\nimport { CCol, CRow } from '@coreui/react';\n\nimport GraphPlans from './charts/ChartPlans';\nimport GraphUsers from './charts/ChartUsers';\nimport Calendar from './charts/Calendar';\nimport Users from './users/Users';\nimport ToppingsAndDevices from \"./charts/ToppingsAndDevices\";\n\nimport './css/finance.css';\n\nconst Finance = () => {\n    return (\n        <>\n            <CRow>\n                <CCol xs={4}>\n                    <GraphUsers />\n                </CCol>\n                <CCol xs={4}>\n                    <GraphPlans />\n                </CCol>\n                <CCol xs={4}>\n                    <Calendar />\n                </CCol>\n            </CRow>\n            <br />\n            <CRow>\n                <CCol xs={9}>\n                    <Users />\n                </CCol>\n                <CCol xs={3}>\n                    <ToppingsAndDevices />\n                </CCol>\n            </CRow>\n        </>\n    )\n}\n\nexport default  Finance;\n"],"sourceRoot":""}