{"version":3,"sources":["assets/images/avatars/4.jpg","views/settings/render/Profile.jsx","views/settings/render/Notify.jsx","views/settings/render/Privacy.jsx","views/settings/render/Help.jsx","views/settings/Setting.jsx"],"names":["InfoProfile","useState","nome","sobrenome","cargo","email","senha","pais","idioma","dados","className","md","size","src","avatar4","xs","Notify","type","name","id","label","color","privacy","userType","Cookies","get","Help","pesquisa","setPesquisa","onChange","e","console","log","target","value","placeholder","length","variant","Setting","escolha","setEscolha","op1","setOp1","setOp2","op3","setOp3","op4","setOp4","escolhaMenu","active","onClick","Profile"],"mappings":"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","file":"static/js/30.40e70d8d.chunk.js","sourcesContent":["export default  __webpack_public_path__ + \"static/media/4.3ddf28ab.jpg\";","import React, {useState} from 'react'\n\nimport {\n    CForm, \n    CCol,\n    CButton ,\n    CFormLabel,\n    CFormInput,\n    CFormSelect,\n    CFormCheck,\n    CAvatar,\n  } from '@coreui/react'\n\n  import avatar4 from 'src/assets/images/avatars/4.jpg'\n\n  const useType=\"admin\"\nconst InfoProfile = () =>{\n    \n    \n    // Pegar o token do usuario e baixar suas informacoes \n    const [dados, setDados] = useState(\n        {\n            nome:'Gustavo',\n            sobrenome:'Alcantara',\n            cargo:'Admin',\n            email:'gustavo.alcantara@oonpayperuse.com.br',\n            senha: '123456',\n            pais:'Brasil',\n            idioma:'Portugues',\n        }\n    )\n\n    return (\n        <> \n            <p className='container-profile-tit'> Perfil </p>\n            <CForm className=\"row g-3\">\n                <CCol md={1}>\n                    <CAvatar size=\"xl\" src={avatar4} />\n                </CCol>\n                <CCol md={5}>\n                    <label className='container-profile-subTit'> Nome </label>\n                    <br />\n                    <label className='container-profile-text'> {dados.nome} {dados.sobrenome} </label>\n                </CCol>\n                <CCol md={6}>\n                    <label className='container-profile-subTit'> Cargo </label>\n                    <br />\n                    <label className='container-profile-text'> Administrador Ti </label>\n                </CCol>\n                <hr />\n                <label className='container-profile-tit'> Conta </label>\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> E-mail </label>\n                    <br />\n                    <label className='container-profile-text'> gustavo@oonpayperuse.com.br </label>\n                </CCol>\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> Telefone </label>\n                    <br />\n                    <label className='container-profile-text'> 35 9 99909-2312 </label>\n                </CCol>\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> Cidade </label>\n                    <br />\n                    <label className='container-profile-text'> Belo Horizonte MG </label>\n                </CCol>\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> Endereço </label>\n                    <br />\n                    <label className='container-profile-text'> Av Professor Mario Werneck - 730 </label>\n                </CCol>\n                <br />\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> Idioma </label>\n                    <br />\n                    <label className='container-profile-text'> Português SA </label>\n                </CCol>\n                <CCol xs={6}>\n                    <label className='container-profile-subTit'> País </label>\n                    <br />\n                    <label className='container-profile-text'> Brasil SA </label>\n                </CCol>\n                <hr />\n            </CForm>\n        </>\n    )\n}\n\nexport default  InfoProfile","import React,{useState} from 'react'\n\nimport {\n    CForm, \n    CCol,\n    CButton ,\n    CFormLabel,\n    CRow,\n    CFormSelect,\n    CFormCheck,\n    CAvatar,\n  } from '@coreui/react'\n\n\nconst Notify = () =>{\n\n    return (\n        <> \n\n            <CForm className=\"row g-3 container-notify\">\n                <CCol md={11}>\n                    <h4>Notificação</h4>\n                    <br />\n                    <h6>Por e-mail</h6>\n                    <p>Controle quais tipos de notificações de e-mail você recebe (exceto privacidade e e-mails da conta)</p>\n                    <CFormCheck type=\"radio\" name=\"1\" id=\"email\" label=\"Resumo das atividades\"/>\n                    <CFormCheck type=\"radio\" name=\"1\" id=\"email\" label=\"Relatório resumido\"/>\n                </CCol>\n                <CCol md={1}>\n                        \n                </CCol>  \n                \n                <CCol md={11}>\n                    <h6>Por notificação push</h6>\n                    <CFormCheck type=\"radio\" name=\"2\" id=\"push\" label=\"Resumo das atividades\"/>\n                    <CFormCheck type=\"radio\" name=\"2\" id=\"push\" label=\"Relatório resumido\"/>\n                </CCol>\n                <CCol md={1}>\n                \n                </CCol>  \n\n                <CCol md={9}>\n                \n                </CCol>\n                <CCol md={3}>\n                    <CButton color=\"dark\"  className='btn-salvar-setting'> Redefinir</CButton>\n                    <CButton color=\"dark\"  className='btn-salvar-setting'> Salvar</CButton>\n                </CCol> \n            </CForm>\n            \n        </>\n    )\n}\n\nexport default  Notify","import React from 'react'\nimport {\n    CForm, \n    CCol,\n    CButton ,\n    CFormLabel,\n    CRow,\n    CFormSelect,\n    CFormCheck,\n    CAvatar,\n  } from '@coreui/react'\n\n  import Cookies from 'js-cookie'\n\nconst privacy = () =>{\n\n\n    // const userType = 'SUPPORT'\n    const userType = Cookies.get('userType')\n\n    return (\n        <> \n            <h4>Privacidade </h4>\n            <br />\n            <CForm className=\"row g-3 container-notify\">\n                <CCol className='privacy-esq' md={10}>\n                    <h6>Termo de Serviço</h6>\n                    <p>Estes termos de Serviço regem o acesso e uso do site, aplicativos, APIs e widgets do OON Pay Per Use.</p>\n                </CCol>\n                <CCol className='privacy-dir' md={2}>\n                    {userType == 'ADMIN'  ? \n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Editar</CButton>  </> )\n                            :\n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Visualizar </CButton> </>)\n                    }\n                    \n                </CCol>\n            </CForm>\n            <br />\n            <CForm className=\"row g-3 container-notify\">\n                <CCol md={10}>\n                    <h6>Política de Privacidade</h6>\n                    <p>Detalhes sobre os dados que são coletados e como são usados.</p>\n                </CCol>\n                <CCol className='privacy-dir' md={2}>\n                    {userType == 'ADMIN'  ? \n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Editar</CButton>  </> )\n                            :\n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Visualizar </CButton> </>)\n                    }\n                </CCol>\n            </CForm>\n\n            <br />\n            <CForm className=\"row g-3 container-notify\">\n                <CCol md={10}>\n                    <h6>Política de Segurança da Informação</h6>\n                    <p>Proteger as informações e ativos de tecnologia da informação  contra acesso, modificação, destruição ou divulgação não autorizados</p>\n                </CCol>\n                <CCol className='privacy-dir' md={2}>\n                    {userType == 'ADMIN'  ? \n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Editar</CButton>  </> )\n                            :\n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Visualizar </CButton> </>)\n                    }\n                </CCol>\n            </CForm>\n\n            <br />\n            <CForm className=\"row g-3 container-notify\">\n                <CCol md={10}>\n                    <h6>Segurança</h6>\n                    <p>Em caso de fraudes e golpes, quem deve acionar. Política de segurança do aplicativo</p>\n                </CCol>\n                <CCol className='privacy-dir' md={2}>\n                    <br />\n                    {userType == 'ADMIN'  ? \n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Editar</CButton>  </> )\n                            :\n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Visualizar </CButton> </>)\n                    }\n                </CCol>\n            </CForm>\n\n            <br />\n            <CForm className=\"row g-3 container-notify\">\n                <CCol md={10}>\n                    <h6>Canal de Ética</h6>\n                    <p>Este é um canal exclusivo para comunicação segura e, se desejada, anônima, de condutas consideradas antiéticas ou que violem os princípios éticos e padrões de conduta e/ou a legislação vigente.</p>\n                </CCol>\n                <CCol className='privacy-dir' md={2}>\n                    <br />\n                    {userType == 'ADMIN'  ? \n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Editar</CButton>  </> )\n                            :\n                        (<> <CButton color=\"dark\"  className='btn-salvar-setting'> Visualizar </CButton> </>)\n                    }\n                </CCol>\n            </CForm>\n        </>\n    )\n}\n\n\nexport default  privacy","import React , {useState} from 'react'\nimport {\n    CForm, \n    CCol,\n    CButton ,\n    CFormLabel,\n    CRow,\n    CFormSelect,\n    CFormCheck,\n    CAvatar,\n    CFormInput,\n  } from '@coreui/react'\n\n  import CIcon from '@coreui/icons-react'\n  import {cilMagnifyingGlass } from '@coreui/icons'\n\n\nconst Help = () =>{\n\n    const [pesquisa, setPesquisa] = useState('')\n    const pegandoHelp = (e) =>{\n        console.log('help vem ', e.target.value)\n        setPesquisa(e.target.value)\n    }\n    return (\n        <> \n            <br />\n            <h4>Ajuda</h4>\n            <br />\n            <CRow>\n                <CCol xs={2}> </CCol>\n\n                <CCol xs={8}> \n                    <h2 className='container-help-search' >Como podemos ajudar?</h2>\n                    <CFormInput type=\"search\" onChange={pegandoHelp} className=\"me-2\" placeholder=\"Procurar\" />\n                    {/* <CButton type=\"submit\" color='secondary' className='buttonCss' >\n                        <CIcon icon={cilMagnifyingGlass}  size=\"md\" /> \n                    </CButton> */}\n                </CCol>\n\n                <CCol xs={2}> </CCol>\n            </CRow>\n            <CRow>\n               {pesquisa.length >= 3 ?(\n                   <h2>Campo pesquisa {pesquisa}</h2>\n               ) : (\n                   <div> \n                       <CCol xs={10}> \n                            <br />\n                            <br />\n                            <h4>Dúvidas frequentes</h4>\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Gerenciar as configurações de segurança dos usuários\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Mudar ou redefinir a senha de acesso\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Salvar ou baixar relatórios dos meses anteriores\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Salvar ou baixar relatórios dos meses anteriores\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Enviar mensagem para outro funcionário\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Entrar em contato com o usuário\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Ver mais\n                            </CButton>\n\n                            <br />\n                            <br />\n                            <h4>Primeiros passos</h4>\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Como utilizar a plataforma\n                            </CButton>\n                            <br />\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Fazendo login\n                            </CButton>\n                            <br />\n                            <br />\n                            <h4>Conectar</h4>\n                            <CButton type=\"submit\" color='dark' variant='ghost'> \n                                Como interagir com outras pessoas\n                            </CButton>\n                            <br />\n                        </CCol>\n\n                        <CCol xs={2}> </CCol>\n                   </div>\n                    \n                )}\n            </CRow>\n\n        </>\n    )\n}\n\nexport default  Help","import React, { useState } from 'react'\nimport './setting.css'\n\nimport {\n    CCard, \n    CCardBody,\n    CButton ,\n    CRow,\n    CCol,\n    CNavItem,\n    CFormInput,\n  } from '@coreui/react'\n\nimport ContSetting from './render/CountSetting'\nimport Profile from './render/Profile'\nimport Notificacao from './render/Notify'\nimport Privacidade from './render/Privacy'\nimport Help from './render/Help'\n\nconst Setting = () =>{\n\n    const [escolha, setEscolha] = useState('conta') // conta, notificacoes, privacidade, ajuda\n    const [op1, setOp1] = useState(true)\n    const [op2, setOp2] = useState(false)\n    const [op3, setOp3] = useState(false)\n    const [op4, setOp4] = useState(false)\n\n    \n\n    const escolhaMenu = (e) =>{\n\n        setEscolha(e)// pega escolha pro menu\n\n        if(e == 'conta'){\n            setOp1(true)\n            setOp2(false)\n            setOp3(false)\n            setOp4(false)\n        }else if(e == 'notificacoes'){\n            setOp1(false)\n            setOp2(true)\n            setOp3(false)\n            setOp4(false)\n\n        }else if(e == 'privacidade'){\n            setOp1(false)\n            setOp2(false)\n            setOp3(true)\n            setOp4(false)\n        }else{\n            setOp1(false)\n            setOp2(false)\n            setOp3(false)\n            setOp4(true)\n        }\n    }\n\n    return (\n        <> \n            <CCard className=\"w-100 cardSetting\">\n                <CCardBody>\n                <CRow>\n\n                    <CCol xs={2} className='cardEsq'> \n\n                        <div className='containerSiderBarSetting'>\n                            <CButton \n                                color=\"dark\" \n                                className='btn-help-sideBar' \n                                active={op1} size='sm' \n                                variant='ghost' \n                                onClick={() => escolhaMenu('conta')} \n                            >\n                                <label className='font-btn-setting'> Perfil </label>    \n                            </CButton>\n                   \n                            <br />\n                            <CButton \n                                color=\"dark\" \n                                className='btn-help-sideBar' \n                                active={op3} size='sm' \n                                variant='ghost' \n                                onClick={() => escolhaMenu('privacidade')}\n                            > \n                                <label className='font-btn-setting'>  Privacidade  </label> \n                            </CButton>\n                            <br />\n\n                            <CButton \n                                color=\"dark\" \n                                className='btn-help-sideBar'\n                                active={op4} \n                                size='sm' \n                                variant='ghost' \n                                onClick={() => escolhaMenu('ajuda')}\n                            >\n                                <label className='font-btn-setting'>  Ajuda  </label> \n                            </CButton>\n\n                        </div>\n                        \n                    </CCol>\n\n                    <CCol xs={10} className='cardDir' >\n\n                        {escolha == 'conta' ? (\n                            <> \n                                <Profile />\n                            </>\n                        )\n                            : null\n                        }\n\n                        {escolha == 'notificacoes' ? (\n                            <> \n                                <Notificacao />\n                            </>\n                        )\n                            : null\n                        }\n\n                        {escolha == 'privacidade' ? (\n                            <> \n                               <Privacidade/>\n                            </>\n                        )\n                            : null\n                        }\n\n                        {escolha == 'ajuda' ? (\n                            <> \n                                <Help/>\n                            </>\n                        )\n                            : null\n                        }\n\n                    </CCol>\n\n                </CRow>\n                </CCardBody>\n            </CCard>\n        </>\n    )\n \n}\n\n\nexport default  Setting "],"sourceRoot":""}