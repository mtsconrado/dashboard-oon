{"version":3,"sources":["config.js","security/decripty.js","views/scratchs/render/UploadRisc.jsx","views/scratchs/Scratchs.jsx"],"names":["token","Cookies","get","configCookies","headers","Authorization","urlDomain","CryptoJS","require","UserTypeDecryption","userType","AES","decrypt","toString","enc","Utf8","userPermissionsDescription","item","infos","array","split","msm","push","UploadRiscBtn","props","handleClose","setShow","useState","show","salvarInfos","console","log","csv","reader","FileReader","onload","evt","bstr","target","result","wb","XLSX","type","wsname","SheetNames","ws","Sheets","data","sheet_to_csv","header","processData","readAsBinaryString","dataString","dataStringLines","list","i","length","row","obj","j","d","substring","Object","values","filter","x","columns","map","c","name","selector","setData","setColumns","e","setFlagSave","forEach","risco","to","replace","until","Number","kRisk","exposition","axios","post","UrlDomain","then","response","setCsv","parentCallback","catch","r","montaJson","flagSave","onClick","color","Modal","onHide","size","className","Body","accept","required","onChange","files","Button","variant","Spinner","animation","Footer","Riscos","dados","setDados","setPermissions","setUserType","useEffect","Decrypt","expand","fluid","UploadRisc","alert","window","location","reload","align","bordered","hover","responsive","active","index","krisk"],"mappings":"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","file":"static/js/23.ee529473.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\n// Endereço padrão das API\n\nconst prod = 'http://dashboardbff.oonpayperuse.com.br'\nconst dev =  'http://localhost:8080'\n\nconst tokenMaps = 'AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek'   // TOKEN PESSOAL \nconst urlDomain = prod\n\nconst token = Cookies.get(\"TokenID\");\n\nexport const configCookies = {\n  headers: {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n};\n\n\nexport default  urlDomain","var CryptoJS = require(\"crypto-js\");\nimport Cookies from 'js-cookie'\n\nfunction UserTypeDecryption(){\n\n    var userType = Cookies.get('userType')\n    var msg  = CryptoJS.AES.decrypt(userType, 'OnnSeguros');\n    var msgOri = msg.toString(CryptoJS.enc.Utf8);\n\n    return msgOri\n}\n\n  function userPermissionsDescription(){\n    var msg = Cookies.get('permissions')\n    var infos = []\n    var array = msg.split(',')\n\n    var item \n    for (item of array){\n        \n        var msm = CryptoJS.AES.decrypt(item, 'OnnSeguros')\n        infos.push(msm.toString(CryptoJS.enc.Utf8));\n\n    } \n    \n    return infos    \n\n}\n \n\nexport default  {UserTypeDecryption, userPermissionsDescription }","import {\n  CButton, CFormInput, CInputGroup\n} from '@coreui/react';\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { Button, Modal, Spinner } from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\nimport Cookies from 'js-cookie'\n\nimport UrlDomain, { configCookies } from './../../../config'\n\nconst UploadRiscBtn = (props) => {\n  const handleClose = () => setShow(false);\n  const [visible, setVisible] = useState(false)\n  const [show, setShow] = useState(false);\n  const AbreModal = () => setShow(true)\n\n  const salvarInfos = () => {\n    console.log(csv)\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      // pega valores\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: 'binary' });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      // converte o array\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      processData(data); // processa dados, dividindo\n    };\n    reader.readAsBinaryString(csv);\n\n  }\n\n  // Separa campos\n  const processData = dataString => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      if (headers && row.length == headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] == '\"')\n              d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] == '\"')\n              d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        if (Object.values(obj).filter(x => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    const columns = headers.map(c => ({\n      name: c,\n      selector: c,\n    }));\n\n    setData(list);\n    setColumns(columns);\n    montaJson(list)\n  }\n\n  // monta json e envia pro banco \n  function montaJson(e) {\n    setFlagSave(true)\n\n    const array = []\n    e.forEach(risco => {\n      var to = risco[\" to\"].replace(/[^0-9,]/g, '')\n      var until = risco[\" until\"].replace(/[^0-9,]/g, '');\n      array.push({\n        to: Number(to.replace(',', '.')),\n        until: Number(until.replace(',', '.')),\n        kRisk: Number(risco.kRisk.replace(',', '.')), //parseFloat(risco.kRisk.replace(',', '.')),\n        exposition: Number(risco.exposition.replace(',', '.')),\n      })\n    })\n\n    console.log('valores atts', array)\n\n    axios\n      .post(`${UrlDomain}/risks`, array, configCookies)\n      .then((response) => {\n        console.log('Enviado...', response)\n        setCsv()\n        setFlagSave(false)\n        props.parentCallback(true)\n        setShow(false);\n      })\n      .catch(r => { console.log('erro na api....', r) })\n  }\n\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [csv, setCsv] = useState()\n  const [flagSave, setFlagSave] = useState(false)\n\n  return (\n    <>\n      <CButton onClick={AbreModal} color=\"dark\" >\n        Atualizar valores\n      </CButton>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"xl\"\n        className='container-btn-risc'\n      >\n        <Modal.Body>\n          <h3>Atualizar planilha </h3>\n          <br />\n          <p>Atualizar valores de risco por meio de uma planilha .CSV.</p>\n\n          <CInputGroup className=\"mb-3\">\n            <CFormInput type=\"file\" accept=\".csv\" required onChange={(e) => { setCsv(e.target.files[0]) }} />\n          </CInputGroup>\n\n          {csv == null ?\n            (\n              <Button variant=\"secondary\" onClick={salvarInfos}>\n                Salvar\n              </Button>\n            )\n            : null\n          }\n\n          {csv != null && flagSave == false ?\n            (\n              <Button variant=\"secondary\" onClick={salvarInfos}>\n                Salvar\n              </Button>\n            )\n            : null\n          }\n\n          {csv != null && flagSave != false ?\n            (\n              <h4> <Spinner animation=\"grow\" variant=\"info\" />  </h4>\n            )\n            : null\n          }\n\n          {/* <Button variant=\"secondary\" onClick={salvarInfos}>\n                      Salvar\n                  </Button> */}\n\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Sair\n          </Button>\n\n        </Modal.Footer>\n\n      </Modal>\n    </>\n  )\n}\n\nexport default  UploadRiscBtn;\n","import React, { useState, useEffect, useMemo } from 'react'\nimport axios  from \"axios\"\n\nimport './scratchs.css'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CContainer,\n  CTableRow,\n  CNavbar,\n  CCollapse,\n  CNavLink ,\n  CNavbarBrand,\n  CNavbarNav,\n  CNavbarToggler,\n  CNavItem,\n  CCard,\n  CCardBody,\n  CFormInput,\n  CForm,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport {cilLoopCircular, cilMagnifyingGlass, cilChevronRight, cilChevronLeft } from '@coreui/icons'\nimport { Spinner }  from 'react-bootstrap';\nimport UploadRiscBtn from './render/UploadRisc'\nimport Cookies from 'js-cookie'\n\nimport UrlDomain, { configCookies } from '../../config'\n\nvar CryptoJS = require(\"crypto-js\");\nimport Decrypt from '../../security/decripty'\n\nconst Riscos = () => {\n\n  const [dados, setDados] = useState([])\n  const [permissions, setPermissions] = useState([])\n  const [userType, setUserType] = useState([])\n  // const token = Cookies.get('TokenID')\n  // let config = {\n  //   headers: {\n  //     'Authorization': `Bearer ${token}`,  \n  //     'Content-Type': 'application/json;charset=UTF-8',\n  //     \"Access-Control-Allow-Origin\": \"*\",\n  //   }\n  // };\n\n   function attPage(){\n    \n    setDados([])\n    axios \n      .get(`${UrlDomain}/risks`, configCookies)\n      .then((response) => {\n          setDados(response.data)\n      })\n      .catch(r =>{ \n        console.log('error', r), alert('Login expirado'),window.location.reload()\n      })\n  }\n\n  \n\n  useEffect( ()=>{\n    setPermissions(Decrypt.userPermissionsDescription())\n    setUserType(Decrypt.UserTypeDecryption)\n     axios \n      .get(`${UrlDomain}/risks`, configCookies)\n      .then((response) => {\n          setDados(response.data)\n      })\n      .catch(r =>{ \n        //console.log('error', r), alert('Login expirados'),window.location.reload()\n      })\n  }, []) \n\n  console.log(dados);\n  if (dados == ''){\n    return (\n        <>\n          <h4> <Spinner animation=\"grow\" variant=\"info\" />  </h4> \n          <br />\n        </>\n      )\n  }else{\n    return (\n      <div>\n\n        <CCard className='container-risco'>\n            <CCardBody>\n              <CNavbar expand=\"lg\"  className=\"menuUser\">\n                      <CContainer fluid>\n                      <CNavbarToggler\n                          aria-label=\"Toggle navigation\"\n                          // aria-expanded={visible}\n                          // onClick={() => setVisible(!visible)}\n                      />\n                      <CCollapse className=\"navbar-collapse\" >\n                          {/* <CIcon icon={cilUser } size=\"xl\"/> */}\n                          <CNavbarBrand> <h4> Riscos </h4>   </CNavbarBrand>\n                          <CNavbarNav className=\"me-auto mb-2 mb-lg-0\">\n                          </CNavbarNav>\n\n                          {userType == \"ADMIN\" ? \n                              ( <UploadRiscBtn parentCallback={attPage} />)\n                            :null\n\n                          }\n                      </CCollapse>\n                      </CContainer>\n                  </CNavbar>\n              \n              <CTable align=\"middle\" className=\" container-table-risc \" bordered hover  responsive>\n                {/* Cabeca head da tabela do clientes */}\n                <CTableHead >\n                  <CTableRow active>\n                    <CTableHeaderCell  className=\"text-center\">Valor Minímo do veículo</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Valor máximo  do Veículo</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Constante de Risco</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\"> Varíavel de exposição </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n\n                <CTableBody>\n\n                  { dados.map((item, index) => {\n                    return ( \n                          <CTableRow key={index.toString()}>\n                              <CTableDataCell  className=\"valorMin\">\n                                  <p> R$ {item.to} </p>\n                              </CTableDataCell>\n\n                              <CTableDataCell color='secondary'  className=\"text-center\">\n                                  <p> R$ {item.until} </p>\n                              </CTableDataCell>\n\n                              <CTableDataCell className=\"text-center\">\n                                  <p> {item.krisk } </p>\n                              </CTableDataCell>\n\n                              <CTableDataCell color='secondary' className=\"text-center\">\n                                  <p> {item.exposition} </p>\n                              </CTableDataCell>\n                          \n                          </CTableRow> \n                      )\n                  })}\n\n                </CTableBody> \n              </CTable>\n              <br />\n                  \n            </CCardBody>\n        </CCard>\n\n        \n        </div>\n    )\n  }\n  \n}\n\nexport default  Riscos"],"sourceRoot":""}